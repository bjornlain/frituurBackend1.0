paths:
  /cvs.create:
    post:
      description: Create an cv
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cv'
      responses:
        201:
          description: Cv is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cv'
        401:
          $ref: '#/components/responses/FourZeroOne'
        403:
          $ref: '#/components/responses/FourZeroThree'
        5XX:
          $ref: '#/components/responses/FiveHundred'
      security:
        - bearer: []
      tags:
        - Cvs

  /cvs.delete:
    post:
      descriptions: Delete an cv
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  type: string
                  format: bson
      responses:
        204:
          description: Cv is deleted
        400:
          $ref: '#/components/responses/FourZeroZero'
        401:
          $ref: '#/components/responses/FourZeroOne'
        403:
          $ref: '#/components/responses/FourZeroThree'
        404:
          $ref: '#/components/responses/FourZeroFour'
        5XX:
          $ref: '#/components/responses/FiveHundred'
      security:
        - bearer: []
      tags:
        - Cvs

  /cvs.info:
    get:
      description: Get an cv
      parameters:
        - in: query
          name: id
          description: The ID of the cv
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cv'
        401:
          $ref: '#/components/responses/FourZeroOne'
        403:
          $ref: '#/components/responses/FourZeroThree'
        404:
          $ref: '#/components/responses/FourZeroFour'
        5XX:
          $ref: '#/components/responses/FiveHundred'
      security:
        - bearer: []
      tags:
        - Cvs

  /cvs.list:
    get:
      description: Get a list of cvs
      parameters:
        - in: query
          name: sort
          description: The sort order
          schema:
            type: string
        - in: query
          name: limit
          description: The number of items
          schema:
            type: string
        - in: query
          name: skip
          description: The number of items to skip
          schema:
            type: string
        - in: query
          name: search
          description: The search term
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cv'
        401:
          $ref: '#/components/responses/FourZeroOne'
        403:
          $ref: '#/components/responses/FourZeroThree'
        5XX:
          $ref: '#/components/responses/FiveHundred'
      security:
        - bearer: []
      tags:
        - Cvs

  /cvs.update:
    post:
      description: Update an cv
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cv'
      responses:
        200:
          description: Cv is updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cv'
        400:
          $ref: '#/components/responses/FourZeroZero'
        401:
          $ref: '#/components/responses/FourZeroOne'
        403:
          $ref: '#/components/responses/FourZeroThree'
        404:
          $ref: '#/components/responses/FourZeroFour'
        5XX:
          $ref: '#/components/responses/FiveHundred'
      security:
        - bearer: []
      tags:
        - Cvs